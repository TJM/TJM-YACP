
# creates a route per network passed into var.f5_ip_ranges
# Needed to use count instead of for_each to get a nice name iterator
resource "google_compute_route" "f5" {
  count            = length(local.f5_routes)
  name             = "${google_compute_network.vpc.name}-f5-${count.index}"
  project          = var.gcp_project_id
  description      = "F5 Network Route ${count.index}"
  dest_range       = local.f5_routes[count.index]
  network          = google_compute_network.vpc.name
  next_hop_gateway = "default-internet-gateway"
  priority         = 900
}

# EGRESS Firewall allow for f5_ip_ranges
resource "google_compute_firewall" "f5_ip_ranges_egress" {
  name               = "${google_compute_network.vpc.name}-f5-egress"
  project            = var.gcp_project_id
  network            = google_compute_network.vpc.name
  direction          = "EGRESS"
  priority           = 1000
  destination_ranges = var.f5_ip_ranges
  target_tags        = ["f5xc"]

  allow {
    protocol = "tcp"
    ports    = ["443"]
  }

  allow {
    protocol = "udp"
    ports    = ["4500"]
  }
}

resource "google_compute_firewall" "f5_ip_ranges_ingress" {
  name          = "${google_compute_network.vpc.name}-f5-ingress"
  project       = var.gcp_project_id
  network       = google_compute_network.vpc.name
  direction     = "INGRESS"
  priority      = 1000
  source_ranges = var.f5_ip_ranges
  target_tags   = ["f5xc"]
  allow {
    protocol = "tcp"
    ports    = ["443"]
  }

  allow {
    protocol = "udp"
    ports    = ["4500"]
  }
}

resource "google_compute_firewall" "f5_additional_ips" {
  name               = "${google_compute_network.vpc.name}-f5-addl-egress"
  project            = var.gcp_project_id
  network            = google_compute_network.vpc.name
  direction          = "EGRESS"
  priority           = 1000
  destination_ranges = var.f5_additional_ips
  target_tags        = ["f5xc"]

  allow {
    protocol = "tcp"
    ports    = ["80", "443"]
  }
}

resource "google_compute_image" "f5xc" {
  name    = var.machine_image
  project = var.gcp_project_id
  family  = "f5xc-ce"
  raw_disk {
    source = "https://storage.googleapis.com/ves-images/${var.machine_image}.tar.gz"
  }
}

module "f5_ce_single" {
  source = "github.com/cklewar/f5-xc-modules//f5xc/ce/gcp?ref=606c1b6" # main - 2023-01-30
  # source = "github.com/tjm/f5-xc-modules//f5xc/ce/gcp?ref=7d2bb4d" # fix/no-public-ips
  # source                         = "../../F5/f5-xc-modules/f5xc/ce/gcp"
  f5xc_ce_gateway_multi_node     = false # this is broken when true
  has_public_ip                  = false
  gcp_region                     = var.gcp_region
  gcp_service_account_email      = google_service_account.f5xc.email
  fabric_subnet_outside          = "" # empty string - do not create
  fabric_subnet_inside           = "" # empty string - do not create
  existing_fabric_subnet_outside = google_compute_subnetwork.main.self_link
  network_name                   = "" # unused
  instance_name                  = "${var.name_prefix}-${var.env}-f5xc-${random_id.suffix.hex}"
  ssh_username                   = "centos"
  machine_type                   = var.machine_type
  machine_image                  = google_compute_image.f5xc.name
  machine_disk_size              = var.machine_disk_size
  ssh_public_key                 = file(var.ssh_public_key_file)
  host_localhost_public_name     = "vip"
  f5xc_tenant                    = var.f5xc_tenant
  f5xc_api_url                   = var.f5xc_api_url
  f5xc_namespace                 = var.f5xc_namespace
  f5xc_api_token                 = var.f5xc_api_token
  f5xc_token_name                = "${var.name_prefix}-${var.env}-${random_id.suffix.hex}"
  f5xc_fleet_label               = var.f5xc_fleet_label
  f5xc_cluster_latitude          = var.cluster_latitude
  f5xc_cluster_longitude         = var.cluster_longitude
  f5xc_ce_gateway_type           = "ingress_gateway"
  instance_tags                  = ["f5xc"]

  providers = {
    google   = google.project_bound
    volterra = volterra
  }

  depends_on = [
    google_compute_route.f5,
    google_compute_firewall.f5_ip_ranges_ingress,
    google_compute_firewall.f5_ip_ranges_egress,
    google_compute_firewall.f5_additional_ips,
  ]
}
